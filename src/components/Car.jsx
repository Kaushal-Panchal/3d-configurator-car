/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 car.glb
*/

import React, { useEffect, useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import { button, useControls } from 'leva';
import * as THREE from 'three';

export function Car(props) {
    const { nodes, materials } = useGLTF('./models/car.glb');

    console.log('Materials', materials);
    let arrayOfControls = [];
    Object.keys(materials).map((materialName) => {
        const material = { ...materials[materialName] };
        const customMaterial = {};
        Object.keys(material).map((key) => {
            if (typeof material[key] === 'number' || typeof material[key] === 'boolean') {
                customMaterial[key] = material[key];
            } else if (typeof material[key] === 'object' && material[key]?.isColor) {
                // For Colors
                customMaterial[key] = `#${material[key].getHexString()}`;
            }
        });
        const levaControls = useControls(materialName, {
            ...customMaterial,
        });
        arrayOfControls.push({ name: materialName, levaControls });
    });
    useEffect(() => {
        arrayOfControls.map((control) => {
            const levaControls = control.levaControls;
            Object.keys(levaControls).map((levaKey) => {
                // For Colors
                if (typeof levaControls[levaKey] === 'string' && levaControls[levaKey]?.includes('#')) {
                    materials[control.name][levaKey] = new THREE.Color(levaControls[levaKey]);
                } else {
                    materials[control.name][levaKey] = levaControls[levaKey];
                }
            });
        });
    }, [arrayOfControls]);

    return (
        <group {...props}>
            <group position={[0.006, 1.33, -0.052]} scale={3.165}>
                <mesh geometry={nodes.Plane004.geometry} material={materials['Material.005']} />
                <mesh geometry={nodes.Plane004_1.geometry} material={materials['Material.008']} />
                <mesh geometry={nodes.Plane004_2.geometry} material={materials['Material.002']} />
                <mesh geometry={nodes.Plane004_3.geometry} material={materials['Material.001']} />
                <mesh geometry={nodes.Plane004_4.geometry} material={materials['Material.006']} />
                <mesh geometry={nodes.Plane004_5.geometry} material={materials['Material.009']} />
                <mesh geometry={nodes.Plane004_6.geometry} material={materials.WindowsTint} />
                <mesh geometry={nodes.Plane004_7.geometry} material={materials['Material.004']} />
                <mesh geometry={nodes.Plane004_8.geometry} material={materials['Material.003']} />
            </group>
            <group position={[1.576, 0.639, 2.139]} scale={[0.443, 0.463, 0.463]}>
                <mesh geometry={nodes.Plane017.geometry} material={materials['Material.001']} />
                <mesh geometry={nodes.Plane017_1.geometry} material={materials['Material.002']} />
            </group>
            <group position={[1.576, 0.639, -2.461]} scale={[0.443, 0.463, 0.463]}>
                <mesh geometry={nodes.Plane011.geometry} material={materials['Material.001']} />
                <mesh geometry={nodes.Plane011_1.geometry} material={materials['Material.002']} />
            </group>
            <group position={[-1.581, 0.639, 2.139]} rotation={[0, 0, 3.124]} scale={[0.443, 0.463, 0.463]}>
                <mesh geometry={nodes.Plane018.geometry} material={materials['Material.001']} />
                <mesh geometry={nodes.Plane018_1.geometry} material={materials['Material.002']} />
            </group>
            <group position={[-1.581, 0.639, -2.461]} rotation={[0, 0, 3.124]} scale={[0.443, 0.463, 0.463]}>
                <mesh geometry={nodes.Plane020.geometry} material={materials['Material.001']} />
                <mesh geometry={nodes.Plane020_1.geometry} material={materials['Material.002']} />
            </group>
        </group>
    );
}

useGLTF.preload('./models/car.glb');
